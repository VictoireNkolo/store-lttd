<?php


namespace App\Repositories;


use App\Models\PasswordReset;
use Illuminate\Support\Facades\DB;
use Carbon\Carbon;

class PasswordResetRepository
{

    /**
     * @var PasswordReset
     */
    private $passwordReset;

    public function __construct(PasswordReset $passwordReset)
    {
        $this->passwordReset = $passwordReset;
    }

    /**
     * Generate a token in the password_resets table
     *
     * @param array $arrData
     */
    public function save(array $arrData)
    {
        return DB::table('password_resets')->insert([
            'email' => $arrData['email'],
            'token' => $arrData['token'],
            'created_at' => Carbon::now()->toDateTimeString()
        ]);
    }

    /**
     * Verifies if the given email already has a request in the DB
     */
    public function verifyIfRequestExists(array $arrEmail)
    {
        return $this->passwordReset::where(['email' => $arrEmail['email']])->first();
    }

    /**
     * Verifies if the token has been generated by our system
     * @var $token
     */
    public function verifyIfTokenIsTrusted($token)
    {
        return $this->passwordReset::where(['token' => $token])->first();
    }

    /**
     * Delete the request of  the password reset
     * @var $token
     */
    public function deletePasswordResetRequest($token)
    {
        $this->passwordReset::where(['token' => $token])->delete();
    }
}
